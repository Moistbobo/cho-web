{"version":3,"sources":["components/Header.tsx","components/Hoc.tsx","features/HomePage/HomePage.tsx","features/Origins/Origins.tsx","features/Games/components/GamesItem.tsx","features/Games/Games.tsx","features/Testimonials/Testimonials.tsx","features/Router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","history","useHistory","buttons","name","onClick","window","open","push","className","map","button","type","Hoc","children","HomePage","useState","clicks","setClicks","dangerouslySetInnerHTML","__html","src","alt","href","target","rel","Origins","GamesItem","url","description","imgSrc","games","Games","game","Testimonials","lang","data-id","data-context","async","charSet","MainRouter","atEnter","opacity","atLeave","atActive","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d30df660.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Header.scss';\n\nconst Header = () => {\n\tconst history = useHistory();\n\n\tconst onClickOrigins = () => history.push('/Origins');\n\tconst onClickHome = () => history.push('/');\n\tconst onClickGames = () => history.push('/Games');\n\tconst onClickVideos = () => window.open('https://www.youtube.com/watch?v=j3-QSBcuWJk&list=PLpRBWNJRuxR4SQ3GVxuGjxDHbnaSyYpEB');\n\tconst onClickTestimonials = () => history.push('/Testimonials');\n\n\tconst buttons = [\n\t\t{\n\t\t\tname: 'Videos',\n\t\t\tonClick: onClickVideos,\n\t\t},\n\t\t{\n\t\t\tname: 'Home',\n\t\t\tonClick: onClickHome,\n\t\t},\n\t\t// {\n\t\t// \tname: 'Origins',\n\t\t// \tonClick: onClickOrigins,\n\t\t// },\n\t\t{\n\t\t\tname: 'Games',\n\t\t\tonClick: onClickGames,\n\t\t},\n\t\t// {\n\t\t// \tname: 'Testimonials',\n\t\t// \tonClick: onClickTestimonials,\n\t\t// },\n\t];\n\n\treturn (\n\t\t<div className=\"header-container\">\n\t\t\t{\n\t\t\t\tbuttons.map((button) => (\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={button.onClick}\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{button.name}\n\t\t\t\t\t</button>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\nimport './Hoc.scss';\nimport Header from './Header';\n\ntype Props = {\n\tchildren: any;\n}\n\nconst Hoc = ({ children }: Props) => (\n\t<div\n\t\tclassName=\"hoc-container\"\n\t>\n\t\t<Header />\n\t\t<div className=\"content\">\n\t\t\t{children}\n\t\t</div>\n\t\t<div className=\"footer\"/>\n\t</div>\n);\n\nexport default Hoc;\n","import React, { useState } from 'react';\nimport './HomePage.scss';\nimport Hoc from '../../components/Hoc';\n\nconst HomePage = () => {\n\tconst [clicks, setClicks] = useState<number>(0);\n\treturn (\n\t\t<Hoc>\n\t\t\t<div\n\t\t\t\tclassName={`homepage-container ${clicks > 10 ? 'rotating' : ''}`}\n\t\t\t>\n\t\t\t\t<h1>ChoNation</h1>\n\t\t\t\t<p dangerouslySetInnerHTML={{ __html: 'A BDONA and<br/>BDO mobile<br/>Guild' }} />\n\t\t\t\t{/* eslint-disable-next-line jsx-a11y/click-events-have-key-events */}\n\t\t\t\t<img\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetClicks(clicks + 1);\n\t\t\t\t\t}}\n\t\t\t\t\tsrc=\"/img/cho.jpg\"\n\t\t\t\t\talt=\"cho\"\n\t\t\t\t/>\n\t\t\t\t<p><b>Recruiting the strongest strong people</b></p>\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://discordapp.com/invite/chogger2\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"discord-icon\"\n\t\t\t\t\t\talt=\"discord\"\n\t\t\t\t\t\tsrc=\"/img/discord.png\"\n\t\t\t\t\t/>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</Hoc>\n\t);\n};\n\nexport default HomePage;\n","import React from 'react';\nimport './Origins.scss';\nimport Hoc from '../../components/Hoc';\n\nconst Origins = () => (\n\t<Hoc>\n\t\t<div\n\t\t\tclassName=\"origins-container\"\n\t\t>\n\t\t\t<h1>Origins</h1>\n\t\t\t<p>Origins of lord cho go here</p>\n\t\t</div>\n\t</Hoc>\n);\n\nexport default Origins;\n","import React from 'react';\nimport './GamesItem.scss';\n\ntype Props = {\n\turl: string;\n\timgSrc: string;\n\tname: string;\n\tdescription: string;\n}\n\nconst GamesItem = ({\n\turl, name, description, imgSrc,\n}:Props) => (\n\t<div\n\t\tclassName=\"game-item-container\"\n\t>\n\t\t<a\n\t\t\thref={url}\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t>\n\t\t\t<img\n\t\t\t\talt=\"game-banner\"\n\t\t\t\tsrc={imgSrc}\n\t\t\t/>\n\t\t</a>\n\n\t\t<h1>{name}</h1>\n\t\t<p>{description}</p>\n\t</div>\n);\n\n\nexport default GamesItem;\n","import React from 'react';\nimport './Games.scss';\nimport GamesItem from './components/GamesItem';\n// eslint-disable-next-line no-unused-vars\nimport { GameItem } from '../../models/GameItem';\nimport Hoc from '../../components/Hoc';\n\nconst games: GameItem[] = [\n\t{\n\t\tname: 'FML Game',\n\t\tdescription: 'Lord Cho leads a Choly Crusade against the evil FML devils',\n\t\turl: 'https://fmlgame.chonation.moe',\n\t\timgSrc: '/img/fmlgame.png',\n\t},\n\t{\n\t\tname: 'Barcode Game',\n\t\tdescription: 'Lord Cho defends his castle against communist barcode invaders',\n\t\turl: 'https://barcodegame.chonation.moe',\n\t\timgSrc: '/img/barcodegame.png',\n\t},\n];\nconst Games = () => (\n\t<Hoc>\n\t\t<div\n\t\t\tclassName=\"games-container\"\n\t\t>\n\t\t\t{\n\t\t\t\tgames.map((game) => (\n\t\t\t\t\t<GamesItem\n\t\t\t\t\t\turl={game.url}\n\t\t\t\t\t\timgSrc={game.imgSrc}\n\t\t\t\t\t\tname={game.name}\n\t\t\t\t\t\tdescription={game.description}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t</Hoc>\n\n);\n\nexport default Games;\n","import React from 'react';\nimport './Testimonials.scss';\nimport Hoc from '../../components/Hoc';\n\nconst images = [\n\t'https://i.imgur.com/2SyfnJ3.png',\n\t'https://i.imgur.com/Sfo1O6i.png',\n];\n\nconst Testimonials = () => (\n\t<Hoc>\n\t\t<div className=\"testimonials-container\">\n\t\t\t<blockquote className=\"imgur-embed-pub\" lang=\"en\" data-id=\"a/2Kq2HKC\" data-context=\"false\">\n\t\t\t\t{/* eslint-disable-next-line max-len */}\n\t\t\t\t{/* eslint-disable-next-line jsx-a11y/anchor-has-content,jsx-a11y/control-has-associated-label */}\n\t\t\t\t<a\n\t\t\t\t\thref=\"//imgur.com/a/2Kq2HKC\"\n\t\t\t\t/>\n\t\t\t</blockquote>\n\t\t\t<script async src=\"//s.imgur.com/min/embed.js\" charSet=\"utf-8\" />\n\t\t</div>\n\t</Hoc>\n);\n\nexport default Testimonials;\n","import React from 'react';\nimport { AnimatedSwitch } from 'react-router-transition';\n\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n} from 'react-router-dom';\nimport HomePage from './HomePage/HomePage';\nimport Origins from './Origins/Origins';\nimport Games from './Games/Games';\nimport './Router.scss';\nimport Testimonials from './Testimonials/Testimonials';\n\nconst MainRouter = () => (\n\t<Router>\n\t\t<AnimatedSwitch\n\t\t\tatEnter={{ opacity: 0 }}\n\t\t\tatLeave={{ opacity: 0 }}\n\t\t\tatActive={{ opacity: 1 }}\n\t\t\tclassName=\"switch-wrapper\"\n\t\t>\n\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t<Route path=\"/Origins\" component={Origins} />\n\t\t\t<Route path=\"/Games\" component={Games} />\n\t\t\t<Route path=\"/Testimonials\" component={Testimonials} />\n\t\t</AnimatedSwitch>\n\t</Router>\n);\n\nexport default MainRouter;\n","import React from 'react';\nimport MainRouter from \"./features/Router\";\n\nfunction App() {\n  return (\n    <MainRouter/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}